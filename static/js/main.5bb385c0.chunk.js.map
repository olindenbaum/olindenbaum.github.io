{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","background","display","borderRadius","expand","transform","marginTop","marginLeft","transition","transitions","create","duration","short","expandOpen","avatar","backgroundColor","Parent","_ref","org","onCollapse","collapsed","classes","react_default","a","createElement","Card","variant","className","style","CardActionArea","onClick","link","window","open","CardHeader","Badge","cursor","color","anchorOrigin","vertical","horizontal","showZero","invisible","overlap","badgeContent","_","size","organizationChildRelationship","SocialAvatar","custom","App_CustomIcon","name","icon","title","_ref2","Avatar","Child","_ref3","CustomIcon","_ref4","Icn","Icons","react_social_icons","network","Business_default","Product","_ref5","p","Node","_ref6","o","parent","_React$useState","React","useState","_React$useState2","Object","slicedToArray","setCollapsed","handleCollapse","useEffect","T","TreeNode","props","index_module","assign","lineWidth","lineColor","lineBorderRadius","children","label","map","child","product","c","createTheme","palette","fontFamily","App","_React$useState3","innerWidth","_React$useState4","windowWidth","setWindowWidth","_React$useState5","innerHeight","_React$useState6","windowHeight","setWindowHeight","useGlobalEvent","onWindowResize","event","width","height","ThemeProvider","Box","bgcolor","padding","organization","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.5bb385c0.chunk.js","sourcesContent":["import React from \"react\";\n\nimport { Tree, TreeNode } from \"react-organizational-chart\";\nimport _ from \"lodash\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport Box from \"@material-ui/core/Box\";\nimport BusinessIcon from \"@material-ui/icons/Business\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Badge from \"@material-ui/core/Badge\";\nimport organization from \"./tree.json\";\nimport * as Icons from \"react-icons/bi\";\nimport { useGlobalEvent } from \"beautiful-react-hooks\";\nimport {\n  createTheme,\n  makeStyles,\n  ThemeProvider,\n} from \"@material-ui/core/styles\";\nimport { SocialIcon } from \"react-social-icons\";\nimport { CardActionArea } from \"@material-ui/core\";\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    background: \"white\",\n    display: \"inline-block\",\n    borderRadius: 16,\n  },\n  expand: {\n    transform: \"rotate(0deg)\",\n    marginTop: -10,\n    marginLeft: \"auto\",\n    transition: theme.transitions.create(\"transform\", {\n      duration: theme.transitions.duration.short,\n    }),\n  },\n  expandOpen: {\n    transform: \"rotate(180deg)\",\n  },\n  avatar: {\n    backgroundColor: \"#ECECF4\",\n  },\n}));\n\nfunction Parent({ org, onCollapse, collapsed }) {\n  const classes = useStyles();\n\n  let backgroundColor = \"white\";\n\n  return (\n    <Card\n      variant=\"outlined\"\n      className={classes.root}\n      style={{ backgroundColor }}\n    >\n      <CardActionArea onClick={() => org.link && window.open(org.link, \"_blank\")}>\n        <CardHeader\n          avatar={\n            <Badge\n              style={{ cursor: \"pointer\" }}\n              color=\"secondary\"\n              anchorOrigin={{\n                vertical: \"bottom\",\n                horizontal: \"right\",\n              }}\n              showZero\n              invisible={!collapsed}\n              overlap=\"circular\"\n              badgeContent={_.size(org.organizationChildRelationship)}\n              onClick={onCollapse}\n            >\n              <SocialAvatar classes={classes} custom={<CustomIcon name={org.icon ? org.icon : null} />} />\n            </Badge>\n          }\n          title={org.name}\n\n        />\n\n      </CardActionArea>\n\n    </Card>\n  );\n}\nfunction SocialAvatar({ classes, custom }) {\n  return <Avatar className={classes.avatar}>\n    {custom}\n  </Avatar>;\n}\n\nfunction Child({ a }) {\n  const classes = useStyles();\n  return (\n    <Card\n      variant=\"outlined\"\n      className={classes.root}\n      style={{ cursor: \"pointer\" }}\n    >\n      <CardActionArea\n        onClick={() => a.link && window.open(a.link, \"_blank\")}>\n        <CardHeader\n          avatar={\n            <SocialAvatar classes={classes} custom={<CustomIcon name={a.icon ? a.icon : null} />} />\n          }\n          title={a.name}\n        />\n      </CardActionArea>\n    </Card >\n  );\n}\n\nconst CustomIcon = ({ name }) => {\n  var Icn = Icons[name];\n  if (name === \"\" || !name) return <BusinessIcon color=\"primary\" />;\n  if (!Icn) {\n    return <SocialIcon network={name} />\n  };\n  return <Icn />;\n};\n\n\nfunction Product({ p }) {\n  const classes = useStyles();\n  return (\n    <Card variant=\"outlined\" className={classes.root}>\n      <CardActionArea\n        onClick={() => p.link && window.open(p.link, \"_blank\")}>\n        <CardHeader\n          avatar={\n            <Badge\n              style={{ cursor: \"pointer\" }}\n              color=\"secondary\"\n              anchorOrigin={{\n                vertical: \"bottom\",\n                horizontal: \"right\",\n              }}\n              showZero\n              overlap=\"circular\"\n            >\n              <SocialAvatar classes={useStyles()} custom={<CustomIcon name={p.icon ? p.icon : null} />} />\n            </Badge>\n          }\n          title={p.name}\n\n        />\n\n      </CardActionArea>\n    </Card>\n  );\n}\nfunction Node({ o, parent }) {\n  const [collapsed, setCollapsed] = React.useState(o.collapsed);\n  const handleCollapse = () => {\n    setCollapsed(!collapsed);\n  };\n  React.useEffect(() => {\n    o.collapsed = collapsed;\n  });\n  const T = parent\n    ? TreeNode\n    : (props) => (\n      <Tree\n        {...props}\n        lineWidth={\"2px\"}\n        lineColor={\"#bbc\"}\n        lineBorderRadius={\"12px\"}\n      >\n        {props.children}\n      </Tree>\n    );\n  return collapsed ? (\n    <T\n      label={\n        <Parent\n          org={o}\n          onCollapse={handleCollapse}\n          collapsed={collapsed}\n        />\n      }\n    />\n  ) : (\n    <T\n      label={\n        <Parent\n          org={o}\n          onCollapse={handleCollapse}\n          collapsed={collapsed}\n        />\n      }\n    >\n      {_.map(o.child, (a) => (\n        <TreeNode label={<Child a={a} />}>\n          {\n            _.map(a.product, (p) => (<TreeNode label={<Product p={p} />} />))\n          }\n        </TreeNode>\n      ))}\n      {_.map(o.parent, (c) => (\n        <Node o={c} parent={o} />\n      ))}\n    </T>\n  );\n}\nconst theme = createTheme({\n  palette: {\n    background: \"#ECECF4\",\n  },\n  fontFamily: \"Roboto, sans-serif\",\n});\n\nexport default function App(props) {\n  const [windowWidth, setWindowWidth] = React.useState(window.innerWidth);\n  const [windowHeight, setWindowHeight] = React.useState(window.innerHeight);\n  const onWindowResize = useGlobalEvent(\"resize\");\n\n  onWindowResize((event) => {\n    setWindowWidth(window.innerWidth);\n    setWindowHeight(window.innerHeight);\n  });\n\n  return (\n    <div style={{ width: windowWidth, height:windowHeight }}>\n      <ThemeProvider theme={theme}>\n        <Box bgcolor=\"background\" padding={4} height=\"80vh\">\n          <Node o={organization} />\n        </Box>\n      </ThemeProvider>\n    </div>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}